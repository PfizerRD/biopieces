#!/usr/bin/env perl

# Copyright (C) 2007-2009 Martin A. Hansen.

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

# http://www.gnu.org/copyleft/gpl.html


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DESCRIPTION <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

# Performs computations on records in stream.

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


use warnings;
use strict;
use Data::Dumper;
use Maasha::Common;
use Maasha::Biopieces;


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


my ( $options, $in, $out, $record, $eval_key, @keys, $eval_val );

$options = Maasha::Biopieces::parse_options(
    [
        { long => 'eval',   short => 'e', type => 'string', mandatory => 'yes', default => undef, allowed => undef, disallowed => undef },
        { long => 'format', short => 'f', type => 'string', mandatory => 'no',  default => undef, allowed => undef, disallowed => undef },
    ]   
);

$in  = Maasha::Biopieces::read_stream( $options->{ "stream_in" } );
$out = Maasha::Biopieces::write_stream( $options->{ "stream_out" } );

while ( $record = Maasha::Biopieces::get_record( $in ) ) 
{
    if ( $options->{ "eval" } =~ /^(\S+)\s*=\s*(.+)$/ )
    {
        $eval_key = $1;
        $eval_val = $2;

        if ( not @keys )
        {
            @keys = split /\s+|\+|-|\*|\/|\*\*/, $eval_val;

            @keys = grep { exists $record->{ $_ } } @keys;
        }

        map { $eval_val =~ s/\Q$_\E/$record->{ $_ }/g } @keys;

        if ( $eval_val =~ /\+|\-|\*|\// or $eval_val =~ /\s+x\s+/)
        {
            $record->{ $eval_key } = eval "$eval_val";
            Maasha::Common::error( qq(eval "$eval_key = $eval_val" failed -> $@) ) if $@;
            $record->{ $eval_key } = sprintf( $options->{ 'format' }, $record->{ $eval_key } ) if $options->{ 'format' };
        }
        else
        {
            $record->{ $eval_key } = $eval_val;
        }
    }
    else
    {
        Maasha::Common::error( qq(Bad compute expression: "$options->{ 'eval' }"\n) );
    }

    Maasha::Biopieces::put_record( $record, $out );
}

Maasha::Biopieces::close_stream( $in );
Maasha::Biopieces::close_stream( $out );


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


BEGIN
{
    Maasha::Biopieces::status_set();
}


END
{
    Maasha::Biopieces::status_log();
}


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


__END__
