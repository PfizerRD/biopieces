#!/usr/bin/env perl

# Copyright (C) 2007-2009 Martin A. Hansen.

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

# http://www.gnu.org/copyleft/gpl.html


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DESCRIPTION <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

# Read BLAST records in tabular format from one or more files.

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


use warnings;
use strict;
use Maasha::Biopieces;
use Maasha::Filesys;


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


my ( $options, $in, $out, $file, $record, $line, @fields, $data_in, $num );

$options = Maasha::Biopieces::parse_options(
    [
        { long => 'data_in', short => 'i', type => 'files!', mandatory => 'no', default => undef, allowed => undef, disallowed => undef },
        { long => 'num',     short => 'n', type => 'uint',   mandatory => 'no', default => undef, allowed => undef, disallowed => '0'   },
    ]   
);

$in  = Maasha::Biopieces::read_stream( $options->{ "stream_in" } );
$out = Maasha::Biopieces::write_stream( $options->{ "stream_out" } );

while ( $record = Maasha::Biopieces::get_record( $in ) ) {
    Maasha::Biopieces::put_record( $record, $out );
}

if ( $options->{ 'data_in' } )
{
    $num = 1;

    $data_in = Maasha::Filesys::files_read_open( $options->{ 'data_in' } );

    while ( $line = <$data_in> )
    {
        chomp $line;

        next if $line =~ /^#/;

        @fields = split /\t/, $line;

        $record->{ "REC_TYPE" }   = "BLAST";
        $record->{ "Q_ID" }       = $fields[ 0 ];
        $record->{ "S_ID" }       = $fields[ 1 ];
        $record->{ "IDENT" }      = $fields[ 2 ];
        $record->{ "ALIGN_LEN" }  = $fields[ 3 ];
        $record->{ "MISMATCHES" } = $fields[ 4 ];
        $record->{ "GAPS" }       = $fields[ 5 ];
        $record->{ "Q_BEG" }      = $fields[ 6 ] - 1; # BLAST is 1-based
        $record->{ "Q_END" }      = $fields[ 7 ] - 1; # BLAST is 1-based
        $record->{ "S_BEG" }      = $fields[ 8 ] - 1; # BLAST is 1-based
        $record->{ "S_END" }      = $fields[ 9 ] - 1; # BLAST is 1-based
        $record->{ "E_VAL" }      = $fields[ 10 ];
        $record->{ "BIT_SCORE" }  = $fields[ 11 ];

        if ( $record->{ "S_BEG" } > $record->{ "S_END" } )
        {
            $record->{ "STRAND" } = '-';

            ( $record->{ "S_BEG" }, $record->{ "S_END" } ) = ( $record->{ "S_END" }, $record->{ "S_BEG" } );
        }
        else
        {
            $record->{ "STRAND" } = '+';
        }

        Maasha::Biopieces::put_record( $record, $out );

        last if $options->{ "num" } and $num == $options->{ "num" };

        $num++;
    }

    close $data_in;
}

Maasha::Biopieces::close_stream( $in );
Maasha::Biopieces::close_stream( $out );


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


BEGIN
{
    Maasha::Biopieces::status_set();
}


END
{
    Maasha::Biopieces::status_log();
}


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


__END__
