#!/usr/bin/env perl

# Copyright (C) 2007-2013 Martin A. Hansen.

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

# http://www.gnu.org/copyleft/gpl.html


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DESCRIPTION <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

# Substitute values to keys in the stream.

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


use warnings;
use strict;
use Maasha::Biopieces;


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


my ( $options, $in, $out, $record, $search, $replace, $keys, $key );

$options = Maasha::Biopieces::parse_options(
    [
        { long => 'search',      short => 's', type => 'string', mandatory => 'yes', default => undef, allowed => undef, disallowed => undef },
        { long => 'replace',     short => 'r', type => 'string', mandatory => 'yes', default => undef, allowed => undef, disallowed => undef },
        { long => 'global',      short => 'g', type => 'flag',   mandatory => 'no',  default => undef, allowed => undef, disallowed => undef },
        { long => 'ignore_case', short => 'i', type => 'flag',   mandatory => 'no',  default => undef, allowed => undef, disallowed => undef },
        { long => 'keys',        short => 'k', type => 'list',   mandatory => 'no',  default => undef, allowed => undef, disallowed => undef },
    ]   
);

$in  = Maasha::Biopieces::read_stream( $options->{ "stream_in" } );
$out = Maasha::Biopieces::write_stream( $options->{ "stream_out" } );

$search  = $options->{ "search" };
$replace = $options->{ "replace" };

while ( $record = Maasha::Biopieces::get_record( $in ) ) 
{
    $keys = $options->{ "keys" } || [ keys %{ $record } ];

    foreach $key (@{ $keys })
    {
        if ( $options->{ 'global' } and $options->{ 'ignore_case' } ) {
            $record->{ $key } =~ s/$search/$replace/gi;
        } elsif ( $options->{ 'global' } ) {
            $record->{ $key } =~ s/$search/$replace/g;
        } elsif ( $options->{ 'ignore_case' } ) {
            $record->{ $key } =~ s/$search/$replace/i;
        } else {
            $record->{ $key } =~ s/$search/$replace/;
        }
    }

    Maasha::Biopieces::put_record( $record, $out );
}

Maasha::Biopieces::close_stream( $in );
Maasha::Biopieces::close_stream( $out );


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


BEGIN
{
    Maasha::Biopieces::status_set();
}


END
{
    Maasha::Biopieces::status_log();
}


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


__END__
