#!/usr/bin/env perl

# Copyright (C) 2007-2009 Martin A. Hansen.

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

# http://www.gnu.org/copyleft/gpl.html


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DESCRIPTION <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

# List all tracks availible in a local installation of the Biopieces Genome Browser.

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


use warnings;
use strict;
use Data::Dumper;
use Maasha::Biopieces;
use Maasha::BGB::Track;


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


my ( $user, $options, $in, $out, $record, $dir_hash, $clade, $genome, $assembly, $contig, $track );

$user    = Maasha::Biopieces::biopiecesrc( "BPB_USER" );

$options = Maasha::Biopieces::parse_options(
    [
        { long => 'user', short => 'u', type => 'string', mandatory => 'yes', default => $user, allowed => undef, disallowed => undef },
    ]   
);

$in  = Maasha::Biopieces::read_stream( $options->{ "stream_in" } );
$out = Maasha::Biopieces::write_stream( $options->{ "stream_out" } );

while ( $record = Maasha::Biopieces::get_record( $in ) )
{
    Maasha::Biopieces::put_record( $record, $out );
}

Maasha::Common::error( qq(Bad user: "$options->{ 'user' }") ) if not grep /^$options->{ 'user' }$/, Maasha::BGB::Track::list_users();

foreach $clade ( Maasha::BGB::Track::list_clades( $options->{ 'user' } ) )
{
    foreach $genome ( Maasha::BGB::Track::list_genomes( $options->{ 'user' }, $clade ) )
    {
        foreach $assembly ( Maasha::BGB::Track::list_assemblies( $options->{ 'user' }, $clade, $genome ) )
        {
            foreach $contig ( Maasha::BGB::Track::list_contigs( $options->{ 'user' }, $clade, $genome, $assembly ) )
            {
                foreach $track ( Maasha::BGB::Track::list_tracks( $options->{ 'user' }, $clade, $genome, $assembly, $contig ) ) {
                    $dir_hash->{ $options->{ 'user' } }->{ $clade }->{ $genome }->{ $assembly }->{ $track } = 1;
                }
            }
        }
    }
}

foreach $clade ( keys %{ $dir_hash->{ $options->{ 'user' } } } )
{
    foreach $genome ( keys %{ $dir_hash->{ $options->{ 'user' } }->{ $clade } } )
    {
        foreach $assembly ( keys %{ $dir_hash->{ $options->{ 'user' } }->{ $clade }->{ $genome } } )
        {
            foreach $track ( keys %{ $dir_hash->{ $options->{ 'user' } }->{ $clade }->{ $genome }->{ $assembly } } )
            {
                $record = {
                    USER     => $options->{ 'user' },
                    CLADE    => $clade,
                    GENOME   => $genome,
                    ASSEMBLY => $assembly,
                    TRACK    => $track,
                };

                Maasha::Biopieces::put_record( $record, $out );
            }
        }
    }
}


Maasha::Biopieces::close_stream( $in );
Maasha::Biopieces::close_stream( $out );


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


BEGIN
{
    Maasha::Biopieces::status_set();
}


END
{
    Maasha::Biopieces::status_log();
}


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


__END__
