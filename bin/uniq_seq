#!/usr/bin/env perl

# Copyright (C) 2007-2009 Martin A. Hansen.

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

# http://www.gnu.org/copyleft/gpl.html


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DESCRIPTION <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

# Count sequences from the stream and select only unique sequences.

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


use warnings;
use strict;
use Maasha::Common;
use Maasha::Biopieces;
use Maasha::Seq;
use Data::Dumper;


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


my ( $options, $in, $out, %hash, $record, $seq, $rc_seq, $type );

$options = Maasha::Biopieces::parse_options(
    [
        { long => 'complement', short => 'c', type => 'flag', mandatory => 'no', default => undef, allowed => undef, disallowed => undef },
    ]   
);

$in  = Maasha::Biopieces::read_stream( $options->{ "stream_in" } );
$out = Maasha::Biopieces::write_stream( $options->{ "stream_out" } );

while ( $record = Maasha::Biopieces::get_record( $in ) ) 
{
    if ( $record->{ 'SEQ' } ) {
        $hash{ uc $record->{ 'SEQ' } }++;
    } else {
        Maasha::Biopieces::put_record( $record, $out );
    }
}

if ( $options->{ 'complement' } )
{
    foreach $seq ( sort keys %hash )
    {
        $type = Maasha::Seq::seq_guess_type( $seq ) if not $type;

        if ( $type eq 'DNA' ) {
            $rc_seq = Maasha::Seq::dna_revcomp( $seq );
        } elsif ( $type eq 'RNA' ) {
            $rc_seq = Maasha::Seq::rna_revcomp( $seq );
        } else {
            Maasha::Common::error( "Cannot reverse-complement protein sequence" );
        }

        if ( exists $hash{ $rc_seq } )
        {
            $hash{ $seq } += $hash{ $rc_seq };

            delete $hash{ $rc_seq };
        }
    }
}

foreach $seq ( keys %hash )
{
    $record = {
        SEQ       => $seq,
        SEQ_LEN   => length $seq,
        SEQ_COUNT => $hash{ $seq },
    };

    Maasha::Biopieces::put_record( $record, $out );
}

Maasha::Biopieces::close_stream( $in );
Maasha::Biopieces::close_stream( $out );


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


BEGIN
{
    Maasha::Biopieces::status_set();
}


END
{
    Maasha::Biopieces::status_log();
}


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


__END__
